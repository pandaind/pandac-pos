"""Add is_active field to users

Revision ID: 196993effbf8
Revises: 
Create Date: 2025-08-02 00:50:46.679195

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '196993effbf8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_payments_id', table_name='payments')
    op.drop_table('payments')
    op.drop_index('ix_customers_id', table_name='customers')
    op.drop_index('ix_customers_name', table_name='customers')
    op.drop_table('customers')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_pos_discounts_id', table_name='pos_discounts')
    op.drop_table('pos_discounts')
    op.drop_index('ix_notifications_id', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('ix_pos_sale_items_id', table_name='pos_sale_items')
    op.drop_table('pos_sale_items')
    op.drop_index('ix_loyalty_programs_id', table_name='loyalty_programs')
    op.drop_table('loyalty_programs')
    op.drop_index('ix_sales_id', table_name='sales')
    op.drop_table('sales')
    op.drop_index('ix_discounts_id', table_name='discounts')
    op.drop_table('discounts')
    op.drop_index('ix_suppliers_id', table_name='suppliers')
    op.drop_index('ix_suppliers_name', table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index('ix_purchase_orders_id', table_name='purchase_orders')
    op.drop_table('purchase_orders')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_table('roles')
    op.drop_index('ix_settings_id', table_name='settings')
    op.drop_index('ix_settings_key', table_name='settings')
    op.drop_table('settings')
    op.drop_index('ix_pos_payments_id', table_name='pos_payments')
    op.drop_table('pos_payments')
    op.drop_index('ix_pos_sales_id', table_name='pos_sales')
    op.drop_table('pos_sales')
    op.drop_index('ix_products_id', table_name='products')
    op.drop_index('ix_products_name', table_name='products')
    op.drop_table('products')
    op.drop_index('ix_employees_id', table_name='employees')
    op.drop_index('ix_employees_name', table_name='employees')
    op.drop_table('employees')
    op.drop_index('ix_inventories_id', table_name='inventories')
    op.drop_table('inventories')
    op.drop_index('ix_transactions_id', table_name='transactions')
    op.drop_table('transactions')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('sale_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('employee_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('payment_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('payment_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='transactions_employee_id_fkey'),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name='transactions_payment_id_fkey'),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], name='transactions_sale_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey')
    )
    op.create_index('ix_transactions_id', 'transactions', ['id'], unique=False)
    op.create_table('inventories',
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('reorder_level', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('supplier_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='inventories_product_id_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name='inventories_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventories_pkey'),
    sa.UniqueConstraint('product_id', name='inventories_product_id_key')
    )
    op.create_index('ix_inventories_id', 'inventories', ['id'], unique=False)
    op.create_table('employees',
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('position', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='employees_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='employees_pkey'),
    sa.UniqueConstraint('user_id', name='employees_user_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_employees_name', 'employees', ['name'], unique=False)
    op.create_index('ix_employees_id', 'employees', ['id'], unique=False)
    op.create_table('products',
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('discount_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], name='products_discount_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='products_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_products_name', 'products', ['name'], unique=False)
    op.create_index('ix_products_id', 'products', ['id'], unique=False)
    op.create_table('pos_sales',
    sa.Column('customer_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cashier_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('discount_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cashier_id'], ['employees.id'], name='pos_sales_cashier_id_fkey'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='pos_sales_customer_id_fkey'),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], name='pos_sales_discount_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pos_sales_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_pos_sales_id', 'pos_sales', ['id'], unique=False)
    op.create_table('pos_payments',
    sa.Column('sale_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['sale_id'], ['pos_sales.id'], name='pos_payments_sale_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pos_payments_pkey')
    )
    op.create_index('ix_pos_payments_id', 'pos_payments', ['id'], unique=False)
    op.create_table('settings',
    sa.Column('key', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='settings_pkey')
    )
    op.create_index('ix_settings_key', 'settings', ['key'], unique=False)
    op.create_index('ix_settings_id', 'settings', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('permissions', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('name', name='roles_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('purchase_orders',
    sa.Column('supplier_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_list', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'SHIPPED', 'DELIVERED', name='purchaseorderstatusenum'), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name='purchase_orders_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='purchase_orders_pkey')
    )
    op.create_index('ix_purchase_orders_id', 'purchase_orders', ['id'], unique=False)
    op.create_table('suppliers',
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('contact_info', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('product_list', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='suppliers_pkey')
    )
    op.create_index('ix_suppliers_name', 'suppliers', ['name'], unique=False)
    op.create_index('ix_suppliers_id', 'suppliers', ['id'], unique=False)
    op.create_table('discounts',
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('PERCENTAGE', 'FIXED_AMOUNT', name='discounttypeenum'), autoincrement=False, nullable=False),
    sa.Column('value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('applicable_products', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='discounts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_discounts_id', 'discounts', ['id'], unique=False)
    op.create_table('sales',
    sa.Column('customer_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('discount_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('product_list', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='sales_customer_id_fkey'),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], name='sales_discount_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sales_pkey')
    )
    op.create_index('ix_sales_id', 'sales', ['id'], unique=False)
    op.create_table('loyalty_programs',
    sa.Column('customer_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tier', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='loyalty_programs_customer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='loyalty_programs_pkey')
    )
    op.create_index('ix_loyalty_programs_id', 'loyalty_programs', ['id'], unique=False)
    op.create_table('pos_sale_items',
    sa.Column('sale_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('unit_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('subtotal', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='pos_sale_items_product_id_fkey'),
    sa.ForeignKeyConstraint(['sale_id'], ['pos_sales.id'], name='pos_sale_items_sale_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pos_sale_items_pkey')
    )
    op.create_index('ix_pos_sale_items_id', 'pos_sale_items', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_index('ix_notifications_id', 'notifications', ['id'], unique=False)
    op.create_table('pos_discounts',
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('applicable_products', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pos_discounts_pkey')
    )
    op.create_index('ix_pos_discounts_id', 'pos_discounts', ['id'], unique=False)
    op.create_table('users',
    sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='users_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('customers',
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('contact_info', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('loyalty_points', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='customers_pkey')
    )
    op.create_index('ix_customers_name', 'customers', ['name'], unique=False)
    op.create_index('ix_customers_id', 'customers', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('method', postgresql.ENUM('CREDIT_CARD', 'DEBIT_CARD', 'CASH', 'ONLINE', name='paymentmethodenum'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('AUTHORIZED', 'CAPTURED', 'FAILED', name='paymentstatusenum'), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='payments_pkey')
    )
    op.create_index('ix_payments_id', 'payments', ['id'], unique=False)
    # ### end Alembic commands ###
